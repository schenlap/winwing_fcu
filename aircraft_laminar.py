from Aircraft import Aircraft, DREF, DREF_TYPE

class Laminar_A330(Aircraft):
    def name(self):
        return "Laminar A330 and compatible (D-AIKN)"

    def create_aircraft(self):
        self.drefs = []
        self.drefs.append(DREF("MACH", "sim/autopilot/knots_mach_toggle", DREF_TYPE.CMD))
        self.drefs.append(DREF("LOC", "sim/autopilot/NAV", DREF_TYPE.CMD))
        self.drefs.append(DREF("TRK", "sim/autopilot/trkfpa", DREF_TYPE.CMD))
        self.drefs.append(DREF("AP1", "laminar/A333/annun/autopilot/ap1_mode", DREF_TYPE.DATA))
        self.drefs.append(DREF("AP2", "laminar/A333/annun/autopilot/ap2_mode", DREF_TYPE.DATA))
        self.drefs.append(DREF("A/THR", "laminar/A333/autopilot/a_thr_toggle", DREF_TYPE.CMD))
        self.drefs.append(DREF("EXPED", "sim/autopilot/altitude_hold", DREF_TYPE.CMD))
        self.drefs.append(DREF("METRIC", "laminar/A333/autopilot/metric_alt_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("APPR", "sim/autopilot/approach", DREF_TYPE.CMD))
        self.drefs.append(DREF("SPD DEC", "sim/autopilot/airspeed_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("SPD INC", "sim/autopilot/airspeed_up", DREF_TYPE.CMD))
        self.drefs.append(DREF("SPD PUSH", "laminar/A333/autopilot/speed_knob_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("SPD PULL", "laminar/A333/autopilot/speed_knob_pull", DREF_TYPE.CMD))
        self.drefs.append(DREF("HDG DEC", "sim/autopilot/heading_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("HDG INC", "sim/autopilot/heading_up", DREF_TYPE.CMD))
        self.drefs.append(DREF("HDG PUSH", "laminar/A333/autopilot/heading_knob_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("HDG PULL", "laminar/A333/autopilot/heading_knob_pull", DREF_TYPE.CMD))
        self.drefs.append(DREF("ALT DEC", "sim/autopilot/altitude_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("ALT INC", "sim/autopilot/altitude_up", DREF_TYPE.CMD))
        self.drefs.append(DREF("ALT PUSH", "laminar/A333/autopilot/altitude_knob_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("ALT PULL", "laminar/A333/autopilot/altitude_knob_pull", DREF_TYPE.CMD))
        self.drefs.append(DREF("VS DEC", "sim/autopilot/vertical_speed_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("VS INC", "sim/autopilot/vertical_speed_up", DREF_TYPE.CMD))
        self.drefs.append(DREF("VS PUSH", "laminar/A333/autopilot/vertical_knob_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("VS PULL", "laminar/A333/autopilot/vertical_knob_pull", DREF_TYPE.CMD))
        self.drefs.append(DREF("ALT 100", "laminar/A333/autopilot/alt_step_left", DREF_TYPE.CMD)) # TODO does not work, maybe becaus toliss sends data and not cmd? 
        self.drefs.append(DREF("ALT 1000", "laminar/A333/autopilot/alt_step_right", DREF_TYPE.CMD))
        #self.drefs.append(DREF("BRIGHT", "AirbusFBW/SupplLightLevelRehostats[0]", DREF_TYPE.DATA))
        #self.drefs.append(DREF("BRIGHT_LCD", "AirbusFBW/SupplLightLevelRehostats[1]", DREF_TYPE.DATA))
        self.drefs.append(DREF("APPR_LED", "laminar/A333/annun/autopilot/appr_mode", DREF_TYPE.DATA))
        self.drefs.append(DREF("ATHR_LED", "laminar/A333/annun/autopilot/a_thr_mode", DREF_TYPE.DATA))
        self.drefs.append(DREF("LOC_LED", "laminar/A333/annun/autopilot/loc_mode", DREF_TYPE.DATA))

        #self.drefs.append(DREF("HDGdashed", "AirbusFBW/HDGdashed", DREF_TYPE.DATA))
        #self.drefs.append(DREF("SPDdashed", "AirbusFBW/SPDdashed", DREF_TYPE.DATA))
        #self.drefs.append(DREF("VSdashed", "AirbusFBW/VSdashed", DREF_TYPE.DATA))
        self.drefs.append(DREF("airspeed", "sim/cockpit/autopilot/airspeed", DREF_TYPE.DATA))
        self.drefs.append(DREF("airspeed_dial_kts_mach", "sim/cockpit2/autopilot/airspeed_dial_kts_mach", DREF_TYPE.DATA))
        self.drefs.append(DREF("SPDmanaged", "sim/cockpit2/autopilot/vnav_speed_window_open", DREF_TYPE.DATA))
        self.drefs.append(DREF("airspeed_is_mach", "sim/cockpit/autopilot/airspeed_is_mach", DREF_TYPE.DATA))
        self.drefs.append(DREF("heading_mag", "sim/cockpit/autopilot/heading_mag", DREF_TYPE.DATA))
        self.drefs.append(DREF("HDGmanaged", "sim/cockpit2/autopilot/fms_vnav", DREF_TYPE.DATA))
        self.drefs.append(DREF("HDGTRKmode", "sim/cockpit2/autopilot/st55_hdg", DREF_TYPE.DATA)) # TODO: is inverse!
        self.drefs.append(DREF("altitude", "sim/cockpit/autopilot/altitude", DREF_TYPE.DATA))
        #self.drefs.append(DREF("ALTmanaged", "AirbusFBW/ALTmanaged", DREF_TYPE.DATA))
        self.drefs.append(DREF("vertical_velocity", "sim/cockpit/autopilot/vertical_velocity", DREF_TYPE.DATA))
        self.drefs.append(DREF("fpa", "sim/cockpit2/autopilot/fpa", DREF_TYPE.DATA))
        #self.drefs.append(DREF("APVerticalMode", "AirbusFBW/APVerticalMode", DREF_TYPE.DATA))
        self.drefs.append(DREF("barometer_setting_in_hg_copilot", "sim/cockpit2/gauges/actuators/barometer_setting_in_hg_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("barometer_setting_in_hg_pilot", "sim/cockpit2/gauges/actuators/barometer_setting_in_hg_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("BaroStdFO", "laminar/A333/barometer/fo_mode", DREF_TYPE.DATA))
        self.drefs.append(DREF("BaroUnitFO", "laminar/A333/barometer/fo_inHg_hPa_pos", DREF_TYPE.DATA)) # TODO: 0 .. inHg, 1 .. in hPa
        #self.drefs.append(DREF("BaroStdCapt", "AirbusFBW/BaroStdCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("BaroUnitCapt", "AirbusFBW/BaroUnitCapt", DREF_TYPE.DATA))

        ##TODO: device_config & DEVICEMASK.EFISR
        self.drefs.append(DREF("R_FD", "sim/autopilot/fdir2_command_bars_toggle", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_LS", "laminar/A333/buttons/fo_ils_bars_push", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_CSTR", "sim/cockpit2/EFIS/EFIS_data_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_WPT", "sim/cockpit2/EFIS/EFIS_fix_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_VOR.D", "sim/cockpit2/EFIS/EFIS_vor_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_NDB", "sim/cockpit2/EFIS/EFIS_ndb_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_ARPT", "sim/cockpit2/EFIS/EFIS_airport_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_STD PUSH", "laminar/A333/push/baro/fo_std", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_STD PULL", "laminar/A333/pull/baro/fo_std", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_PRESS DEC", "sim/instruments/barometer_copilot_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_PRESS INC", "sim/instruments/barometer_copilot_up", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_inHg", "laminar/A333/knob/baro/fo_inHg", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_hPa", "laminar/A333/knob/baro/fo_hPa", DREF_TYPE.CMD))
        self.drefs.append(DREF("R_MODE LS",  "sim/cockpit2/EFIS/map_mode_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_MODE VOR", "sim/cockpit2/EFIS/map_mode_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_MODE NAV", "sim/cockpit2/EFIS/map_mode_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_MODE ARC", "sim/cockpit2/EFIS/map_mode_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_MODE PLAN","sim/cockpit2/EFIS/map_mode_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_RANGE 10",  "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA)) # wrong dref?
        self.drefs.append(DREF("R_RANGE 20",  "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_RANGE 40",  "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_RANGE 80",  "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_RANGE 160", "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_RANGE 320", "sim/cockpit2/EFIS/map_range_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_1 VOR", "sim/cockpit2/EFIS/EFIS_1_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_1 OFF", "sim/cockpit2/EFIS/EFIS_1_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_1 ADF", "sim/cockpit2/EFIS/EFIS_1_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_2 VOR", "sim/cockpit2/EFIS/EFIS_2_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_2 OFF", "sim/cockpit2/EFIS/EFIS_2_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_2 ADF", "sim/cockpit2/EFIS/EFIS_2_selection_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_ARPT_IND", "sim/cockpit2/EFIS/EFIS_airport_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_NDB_IND", "sim/cockpit2/EFIS/EFIS_ndb_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_VORD_IND", "sim/cockpit2/EFIS/EFIS_vor_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_WPT_IND", "sim/cockpit2/EFIS/EFIS_fix_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_CSTR_IND", "sim/cockpit2/EFIS/EFIS_data_on_copilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("R_FD_IND", "laminar/A333/PFD/FMAs/flight_dir_12_status", DREF_TYPE.DATA)) # 1 .. left, 2 .. right # TODO
        self.drefs.append(DREF("R_LS_IND", "laminar/A333/status/fo_ls_bars", DREF_TYPE.DATA))

        ##TODO: device_config & DEVICEMASK.EFISL
        #self.drefs.append(DREF("L_FD", "toliss_airbus/fd1_push", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_LS", "toliss_airbus/dispcommands/CaptLSButtonPush", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_CSTR", "toliss_airbus/dispcommands/CaptCstrPushButton", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_WPT", "toliss_airbus/dispcommands/CaptWptPushButton", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_VOR.D", "toliss_airbus/dispcommands/CaptVorDPushButton", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_NDB", "toliss_airbus/dispcommands/CaptNdbPushButton", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_ARPT", "toliss_airbus/dispcommands/CaptArptPushButton", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_STD PUSH", "toliss_airbus/capt_baro_push", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_STD PULL", "toliss_airbus/capt_baro_pull", DREF_TYPE.CMD))
        self.drefs.append(DREF("L_PRESS DEC", "sim/instruments/barometer_down", DREF_TYPE.CMD))
        self.drefs.append(DREF("L_PRESS INC", "sim/instruments/barometer_up", DREF_TYPE.CMD))
        #self.drefs.append(DREF("L_inHg", "AirbusFBW/BaroUnitCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_hPa", "AirbusFBW/BaroUnitCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_MODE LS", "AirbusFBW/NDmodeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_MODE VOR", "AirbusFBW/NDmodeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_MODE NAV", "AirbusFBW/NDmodeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_MODE ARC", "AirbusFBW/NDmodeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_MODE PLAN", "AirbusFBW/NDmodeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 10", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 20", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 40", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 80", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 160", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_RANGE 320", "AirbusFBW/NDrangeCapt", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_1 ADF", "sim/cockpit2/EFIS/EFIS_1_selection_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_1 OFF", "sim/cockpit2/EFIS/EFIS_1_selection_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_1 VOR", "sim/cockpit2/EFIS/EFIS_1_selection_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_2 ADF", "sim/cockpit2/EFIS/EFIS_2_selection_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_2 OFF", "sim/cockpit2/EFIS/EFIS_2_selection_pilot", DREF_TYPE.DATA))
        self.drefs.append(DREF("L_2 VOR", "sim/cockpit2/EFIS/EFIS_2_selection_pilot", DREF_TYPE.DATA))
        #self.drefs.append(DREF("L_ARPT_IND", "AirbusFBW/NDShowARPTCapt", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_NDB_IND", "AirbusFBW/NDShowNDBCapt", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_VORD_IND", "AirbusFBW/NDShowVORDCapt", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_WPT_IND", "AirbusFBW/NDShowWPTCapt", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_CSTR_IND", "AirbusFBW/NDShowCSTRCapt", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_FD_IND", "AirbusFBW/FD1Engage", DREF_TYPE.NONE))
        #self.drefs.append(DREF("L_LS_IND", "AirbusFBW/ILSonCapt", DREF_TYPE.NONE))

